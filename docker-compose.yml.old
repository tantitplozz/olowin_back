version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: omnicard-frontend
    ports:
      - "8080:80"
    environment:
      - VITE_API_URL=http://backend:8001
      - VITE_WS_URL=ws://backend:8001/ws
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - omnicard-network
    depends_on:
      - backend

  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: omnicard-backend
    working_dir: /app
    volumes:
      - ./backend/src:/app/src
    ports:
      - "8001:8001"
    command: uvicorn src.main:app --host 0.0.0.0 --port 8001
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - omnicard-network

  # Databases
  mongodb:
    image: mongo:7
    container_name: omnicard-mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - omnicard-network

  redis:
    image: redis:7-alpine
    container_name: omnicard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - omnicard-network

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: omnicard-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - omnicard-network

  # Vector Database
  chromadb:
    image: chromadb/chromadb:latest
    container_name: omnicard-chromadb
    ports:
      - "8002:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - omnicard-network

#====================================
# ðŸ“Š Monitoring
#====================================
prometheus:
  image: prom/prometheus:latest
  container_name: omnicard-prometheus
  volumes:
    - ./docker/config/prometheus:/etc/prometheus
    - prometheus_data:/prometheus
  command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
  ports:
    - "9090:9090"
  profiles: ['monitoring']

grafana:
  image: grafana/grafana:latest
  container_name: omnicard-grafana
  volumes:
    - grafana_data:/var/lib/grafana
  environment:
    - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
  ports:
    - "3000:3000"
  depends_on:
    - prometheus
  profiles: ['monitoring']

volumes:
  prometheus_data:
  grafana_data:
  mongodb_data:
  redis_data:
  rabbitmq_data:
  chromadb_data:

networks:
  omnicard-network:
    driver: bridge
