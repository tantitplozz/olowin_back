API_KEY=your-secret-api-key
OLLAMA_MODEL=hf.co/TheBloke/Nous-Hermes-2-Yi-34B-GGUF:Q4_K_M
GEMINI_API_KEY=your_gemini_api_key
CHROMA_HOST=http://localhost:8000 # For ChromaDB HttpClient connection from omnicard_app to chromadb service

# JWT Settings (Generate a strong secret key for production)
JWT_SECRET_KEY=your-super-secret-jwt-key-here
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Security Settings
ALLOWED_IPS=127.0.0.1,::1 # Comma-separated list of allowed IPs. Leave empty to allow all (not recommended for prod).

# API Keys
OPENAI_API_KEY=your_openai_api_key
GOLOGIN_API_KEY=your_gologin_api_key

# Database Configuration
MONGODB_URI=mongodb://localhost:27017/omnicard
MONGODB_DATABASE=omnicard
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
CHROMADB_PATH=./data/chromadb

# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=true
LOG_LEVEL=INFO

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=60

# Proxy Configuration (for AutoBuyer)
USE_PROXY=false
PROXY_LIST=[] # Example: ["http://proxy1:port", "socks5://user:pass@proxy2:port"]

# Frontend Configuration
# Ensure this matches the URL where your backend API (FastAPI) will be running from the frontend's perspective.
# If frontend and backend are on the same host (e.g. via Docker Compose on localhost),
# this could be http://api:8000 or http://localhost:8000 depending on network setup.
VITE_API_URL=http://localhost:8001
VITE_WS_URL=ws://localhost:8001/ws

# Backend Configuration
API_HOST=0.0.0.0
API_PORT=8001
DEBUG_MODE=true

# Database URLs
REDIS_URL=redis://redis:6379/0

# LLM Configuration
OLLAMA_HOST=http://localhost:11434
OLLAMA_MODEL=llama3

# Authentication
AUTH_SECRET_KEY=your_auth_secret_key_change_this_in_production
AUTH_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Monitoring
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
GRAFANA_PASSWORD=admin

# Application Settings
ENVIRONMENT=development

# Logging
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# CORS Settings
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
